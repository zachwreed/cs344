#!/bin/bash
#------------------------------
#Author: Zach Reed
#Description:  Matrix Script
#Date: 9/27/2019
#------------------------------


#-----------------------
# Temporary Files
#-----------------------
m1="m1$$"
m2="m2$$"

m1_colN="m1_coln$$"
m2_colN="m2_coln$$"
m1_rowN="m1_rown$$"
m2_rowN="m2_rown$$"
#-----------------------
# Error Function Handler
#-----------------------
err() {
	echo "$@" >&2
}

#-----------------------
# Get Columns  Function
#-----------------------
cols() {
	read line<$1
	local col_n=0
	for i in $line
	do
		((++col_n))
	done
	echo "$col_n"
}

#-----------------------
# Get Rows Function
#-----------------------
rows() {
	local row_n=0
	while read -r line
	do
		((++row_n))
	done < "$1"
	echo "$row_n"	
}

#-----------------------
# dimension Function
#-----------------------

dims() {
	#cols $1 $m1
	local col_n=$(cols $m1)
	local row_n=$(rows $m1)
	echo "$col_n $row_n"
}

#-----------------------
# Add Function
#-----------------------
add() {
	err "Add not implemented"
}


#-----------------------
# Main Function
#-----------------------

main() {
	#echo $1 ${@:2}

	if [[ $(type -t $1) == "function" ]]
	then
		if [[ $1 == "dims" || $1 == "mean" ]]
		then
			if [ "$#" = "1" ]
			then
    				cat > "$m1"			

			elif [ "$#" = "2" ]
			then
    				m1=$2
				#cat m1
			fi
			$1

		else
			echo "handler for if not dims/mean"
		fi
	else
		err "Invalid function call: $1"
	fi
}

# "${@:2}" takes all args from > 1st arg 
main $1 "${@:2}"

